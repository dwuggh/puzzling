#+TITLE: the Puzzling Project
#+TODO: TODO(t) | DONE(d)
#+TODO: ONIT(o) | CANCELED(c)
* about
  - a simple rubik's cube simulator
  - a platform for cubes and puzzles
  [[./proto1.png]]
* purpose
** this project
*** full-featured visual cube emulator
    - all WCA events
    - auto scramble & timer and statistics
    - algorithm database & solution helper (CFOP, megaminx PLL, etc)
*** other puzzles
    - 15 puzzle
    - other Twisty Puzzles (mirror cube, 2x3x3, etc)
    - and more...
** as a student
  - for fun
  - learn how to develop a software from scratch
  - get familiar with modern designing patterns
  - learn Computer Graphics
  - teamwork with git
* structure
  - Vue's mode(MVVM)
* technology stack
** vue.js
   - a modern front-end framework
   - easy to learn and use(relatively)
   - vue CLI
** quasar
   - a vue.js based framework
   - built-in electron and SPA(Single Page App) support
   - a good vue.js component library
** webGL
*** three.js
    - easy to learn
    - plenty of tutorials, both english and chinese
    - offical chinese document(for some reason it's hided recently, but still can be found)
*** base webGL(2)
    - (relatively) hard to learn
    - more flexible
** SQL
   - we may have to write our own database engine
   - database designing
   - mySQL, sqlite, etc
** electron
   - quasar built-in support
   - use vue-electron package
   - electron is not the main focus
* code style
** eslint
   - need discussion
** DRY --Don't Repeat Yourself
   - good abstraction
   - reusable API
* comments and documents
** need good advice
* version control & package management
** git
   - [[https://github.com/dwuggh/puzzling][github]]
   - [[https://git.ustc.edu.cn/dwuggh/puzzling][gitlab]]
** yarn/npm
** test
   - not so sure how to deploy tests
   - gitlab CI
* platform
  - linux
  - windows
  - macOS
* license
  - need discussion
  - currently GPLv3
* IDEs
  - vscode
  - webstorm (edu license)
  - emacs/vim
* some fantasy
** ONIT typescript?
   - type system means much more completion options
   - better OOP support
   - strict type check can be annoying
** CANCELED rebulid on C++ Qt platform?
*** pros:
    - better OOP support
    - lightweight and fast
    - more flexible
*** cons:
    - the worst package management
    - less extensibility
    - node.js is modernized and it is the future trend
    - much more code, especially openGL
** is vue necessary?
   - perhaps not, but we could try it first
   - using a framework can save lots of code
